name: ci

on:
  push:
    branches: [master, release/**]
  pull_request:
    branches: [master, release/**]

permissions:
  contents: read
  pull-requests: write
  actions: read
  id-token: write

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

defaults:
  run:
    shell: bash -euo pipefail {0}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Validate YAML configs
        uses: cardinalby/schema-validator-action@2166123eb256fa40baef7e22ab1379708425efc7 # v3.1.1
        with:
          file: "etc/defaults/config*.yaml"
          schema: "schema/json/config.schema.json"

      - name: Validate YAML themes
        uses: cardinalby/schema-validator-action@2166123eb256fa40baef7e22ab1379708425efc7 # v3.1.1
        with:
          file: "etc/defaults/themes/*.yaml"
          schema: "schema/json/theme.schema.json"

      - name: Setup taplo
        uses: uncenter/setup-taplo@4f203fdb4f3b1e289c8382cf90d8397d2338df2e # v1.0.8

      - name: Validate TOML configs and themes
        run: taplo check

      - name: Install latest nightly
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check formatting
        run: cargo +nightly fmt --check --verbose --all

      - name: markdownlint-cli2-action
        uses: DavidAnson/markdownlint-cli2-action@992badcdf24e3b8eb7e87ff9287fe931bcb00c6e # v20.0.0

      - name: Run Check
        run: cargo check --locked --workspace

      - name: Run Clippy
        run: cargo clippy --locked --workspace --all-targets --all-features -- -D warnings

      - name: Build
        run: cargo build --locked --workspace --verbose --benches

      - name: Run tests
        run: cargo test --locked --workspace --verbose

      - name: Run executable
        run: cargo run --locked

  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install latest toolchain
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Generate code coverage
        run: |
          make coverage

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          use_oidc: true

  test-nix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Nix
        uses: cachix/install-nix-action@fd24c48048070c1be9acd18c9d369a83f0fe94d7 # v31.8.1

      - name: Cache Nix store
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: hl
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Run nix flake check
        run: nix flake check --print-build-logs --all-systems --no-update-lock-file

      - name: Check Nix formatting
        run: |
          nix fmt --no-update-lock-file
          if ! git diff --exit-code; then
            echo "Nix files are not formatted correctly"
            exit 1
          fi

      - name: Run nix build
        run: nix build --print-build-logs --no-update-lock-file
