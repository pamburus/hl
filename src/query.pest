input = _{ SOI ~ ws* ~ _expression ~ ws* ~ EOI }

_expression  = _{ _e_or }
or           =  { _e_xor ~ ws* ~ (_or ~ ws* ~ _e_xor)+ }
xor          =  { _e_and ~ ws* ~ (_xor ~ ws* ~ _e_and)+ }
and          =  { _e_unary ~ ws* ~ (_and ~ ws* ~ _e_unary)+ }
not          =  { _not ~ ws* ~ _e_unary }
_e_or        = _{ or | _e_xor }
_e_xor       = _{ xor | _e_and }
_e_and       = _{ and | _e_unary }
_e_unary     = _{ not | primary }
primary      =  { "(" ~ ws* ~ _expression ~ ws* ~ ")" | term }
term         =  { level_filter | field_filter }
level_filter =  { ^"level" ~ ws+ ~ is ~ ws+ ~ level }
field_filter =  { "."? ~ ws* ~ field_name ~ ws* ~ _string_op ~ ws* ~ string }
field_name   = @{ ("@" | "_" | "-" | "." | LETTER | NUMBER)+ }

level         = ${
    (level_debug | level_info | level_warning | level_error) ~ &punctuation
}
level_debug   = @{ ^"debug" | ^"dbg" }
level_info    = @{ ^"info" | ^"inf" }
level_warning = @{ ^"warning" | ^"warn" | ^"wrn" }
level_error   = @{ ^"error" | ^"err" }

_or             = _{ ^"or" ~ &punctuation }
_xor            = _{ ^"xor" ~ &punctuation }
_and            = _{ ^"and" ~ &punctuation }
_not            = _{ ^"not" ~ &punctuation }
is              = @{
    ^"is" ~ &punctuation
}
_string_op      = _{ equal | like | regex_match | not_equal | not_like | not_regex_match }
equal           = @{
    "="
  | ^"eq" ~ &punctuation
}
like            = @{
    "~="
  | ^"like" ~ &punctuation
}
regex_match     = @{
    "~~="
  | ^"match" ~ &punctuation
}
not_equal       = @{
    "!="
  | ^"not" ~ ws+ ~ ^"eq" ~ &punctuation
}
not_like        = @{
    "!~="
  | ^"not" ~ ws+ ~ ^"like" ~ &punctuation
}
not_regex_match = @{
    "!~~="
  | ^"not" ~ ws+ ~ ^"match" ~ &punctuation
}

punctuation = _{ "(" | ")" | ws | EOI }

string = ${ json_string | simple_string }

json_string       = @{ "\"" ~ json_string_inner ~ "\"" }
json_string_inner = @{ json_char* }
json_char         =  {
    !("\"" | "\\") ~ ANY
  | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
  | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

simple_string = @{ simple_char* }
simple_char   = @{ (LETTER | NUMBER | "@" | "." | "_" | "-" | ":" | "/" | "!" | "#" | "%" | "$" | "*" | "+")+ }

ws = _{ " " }
